/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
ListNode* Solution::getIntersectionNode(ListNode* A, ListNode* B) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
    
    ListNode * curr_a = A;
    ListNode * curr_b = B;
    int la = 0,lb = 0;
    
    while(curr_a!= NULL){
        curr_a = curr_a->next;
        la++;
    }
    while(curr_b!= NULL){
        curr_b = curr_b->next;
        lb++;
    }
     curr_a = A;
     curr_b = B;
    int diff = abs(la - lb);
if (lb > la) {
    while (diff--) {
        curr_b = curr_b->next;
    }
} else {
    while (diff--) {
        curr_a = curr_a->next;
    }
}

    while(curr_a!= NULL){
        if(curr_a == curr_b){
            return curr_a;
        }
        curr_a = curr_a->next;
        curr_b = curr_b->next;
    }
    return NULL;
}
