int countLessEqual(const vector<int> &A, int val) {
    int count = 0;
    for (int num : A) {
        if (num <= val) count++;
    }
    return count;
}

int Solution::kthsmallest(const vector<int> &A, int B) {
    int low = 0;
    int high = *max_element(A.begin(), A.end());

    while (low < high) {
        int mid = low + (high - low) / 2;

        int cnt = countLessEqual(A, mid);
        if (cnt < B) {
            low = mid + 1;
        } else {
            high = mid;
        }
    }

    return low;
}
